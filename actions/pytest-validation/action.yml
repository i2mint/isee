name: "Pytest Validation"
description: "Validate source code running pytest"
inputs:
  root-dir:
    description: "Root directory to validate. Defaults to the current directory."
    required: false
    default: "."
  paths-to-ignore:
    description: "Folders and or files to ignore. Provide a comma separated list of 
      paths from the current directory. Any file under these paths will be ignored. 
      Example: 'examples,core/scrap,setup.py'"
    required: false
  skip-doctests:
    description: "Skip doctests"
    required: false
  pytest-args:
    description: "Additional arguments to pass to pytest"
    required: false
    default: "-v"
runs:
  using: 'composite'
  steps:
    - name: Install Dependencies
      uses: i2mint/isee/actions/install-packages@master
      with:
        pypi-packages: 'pytest'

    - name: Create conftest.py for ignored paths
      shell: bash
      run: |
        if [ -n "${{ inputs.paths-to-ignore }}" ]; then
          echo "Creating conftest.py to ignore paths: ${{ inputs.paths-to-ignore }}"
          
          # Create a conftest.py file to ignore specified paths
          cat > ${{ inputs.root-dir }}/conftest.py << 'EOF'
import os
import sys

# Get the ignored paths from environment variable
ignored_paths_str = os.environ.get('PYTEST_IGNORED_PATHS', '')
collect_ignore = []

if ignored_paths_str:
    ignored_paths = ignored_paths_str.split(',')
    for path in ignored_paths:
        # Add the path as a module
        if not path.endswith('.py'):
            module_path = f"{path}.py"
            if os.path.exists(module_path):
                collect_ignore.append(module_path)
        else:
            collect_ignore.append(path)
            
        # Add the path as a directory
        if os.path.isdir(path):
            collect_ignore.append(path)
EOF
        fi

    - name: Validate Source Code
      shell: bash
      env:
        PYTEST_IGNORED_PATHS: "${{ inputs.paths-to-ignore }}"
      run: |
        set -e
        options="${{ inputs.pytest-args }}"
        if [ "${{ inputs.skip-doctests }}" != "true" ]; then
          options+=" --doctest-modules"
        fi
        
        # Run pytest with all options
        echo "Running: pytest $options ${{ inputs.root-dir }}"
        pytest $options ${{ inputs.root-dir }}
