name: "Pytest Validation"
description: "Validate source code running pytest"
inputs:
  root-dir:
    description: "Root directory to validate. Defaults to the current directory."
    required: false
    default: "."
  paths-to-ignore:
    description: "Folders and or files to ignore. Provide a comma separated list of 
      paths from the current directory. Any file under these paths will be ignored. 
      Example: 'examples,core/scrap,setup.py'"
    required: false
  skip-doctests:
    description: "Skip doctests"
    required: false
  pytest-args:
    description: "Additional arguments to pass to pytest"
    required: false
    default: "-v"
runs:
  using: 'composite'
  steps:
    - name: Install Dependencies
      uses: i2mint/isee/actions/install-packages@master
      with:
        pypi-packages: 'pytest'

  - name: Validate Source Code
    shell: bash
    run: |
      set -e
  
      options="${{ inputs.pytest-args }}"
  
      # Collect ignore patterns
      ignore_expr=""
      if [ -n "${{ inputs.paths-to-ignore }}" ]; then
        IFS=',' read -ra paths <<< "${{ inputs.paths-to-ignore }}"
        for path in "${paths[@]}"; do
          path=$(echo "$path" | xargs)  # Trim whitespace
          ignore_expr+=" ! -path '${{ inputs.root-dir }}/$path/*'"
        done
      fi
  
      # Prepare test targets
      if [ "${{ inputs.skip-doctests }}" = "true" ]; then
        echo "Running: pytest $options ${{ inputs.root-dir }}"
        pytest $options "${{ inputs.root-dir }}"
      else
        # Safely evaluate find command with dynamic ignore_expr
        echo "Finding .py files excluding: ${{ inputs.paths-to-ignore }}"
        # shellcheck disable=SC2086
        files=$(eval "find '${{ inputs.root-dir }}' -type f -name '*.py' $ignore_expr")
        
        echo "Running: pytest $options --doctest-modules $files"
        # shellcheck disable=SC2086
        pytest $options --doctest-modules $files
      fi
