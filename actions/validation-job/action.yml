name: "Validation"
description: "Validation"
inputs:
  PROJECT_NAME: 
    description: Project name
    required: true
  python-version:
    description: "Python version"
    required: false
    default: "3.11"
  SSH_PRIVATE_KEY:
    description: SSH PRIVATE KEY
    required: false
  pypi-packages:
    description: "python packages"
    required: false
  apt-packages:
    description: "apt- get packages"
    required: false
  npm-packages:
    description: "npm packages"
    required: false
  requirements-file:
    description: "requirements file path"
    required: false
  test-requirements-file:
    description: "test requirements file path"
    required: false
  use-setup-cfg:
    description: "install from setup.cfg install_requires and tests_require"
    required: false
    default: "true"
  pylint-enable:
    description: "Pylint checks to enable or false to skip pylint"
    required: false
    default: "C0114,C0115,C0116"
  pytest-enable:
    description: "Enable pytest or false to skip pytest"
    required: false
    default: "true"
  checkout:
    description: "Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it"
    required: false
    default: "true"

runs:
  using: composite
  steps:
    - name: Checkout
      if: ${{ inputs.checkout  == 'true'}}
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Configure SSH
      if: ${{ inputs.SSH_PRIVATE_KEY }}
      uses: webfactory/ssh-agent@v0.7.0
      with:
          ssh-private-key: ${{ inputs.SSH_PRIVATE_KEY }}

    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
      
    - name: Setup Node.js environment
      if: ${{ inputs.npm-packages }}
      uses: actions/setup-node@v2.5.1

    - name: Install dependencies
      uses: i2mint/isee/actions/install-packages@master
      with:
        pypi-packages: 'pytest pylint ${{ inputs.pypi-packages }}'
        apt-packages: ${{ inputs.apt-packages }}
        npm-packages: ${{ inputs.npm-packages }}
        requirements-file: ${{ inputs.requirements-file }}
        test-requirements-file: ${{ inputs.test-requirements-file }}
        use-setup-cfg: ${{ inputs.use-setup-cfg }}
    - name: Validate docstrings
      run: |
        set -e
        if ["${{ inputs.pylint-enable }}" != "false"];then
          pylint ./${{ inputs.project-name }} --disable=all --enable=${{ inputs.pylint-enable }}
        else
          echo "Skipping pylint"
        fi
      shell: bash
    - name: Test
      run: |
        set -e
        if ["${{ inputs.pytest-enable }}" == "true"];then
          pytest --doctest-modules -v ./${{ inputs.project-name }}
        else
          echo "Skipping pytest"
        fi
      shell: bash
