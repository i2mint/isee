name: Continuous Integration
on: [push, pull_request]
env:
  PROJECT_NAME: isee
jobs:
  # validation:
  #   name: Validation
  #   if: "!contains(github.event.head_commit.message, '[skip ci]')"
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: [3.8]
  #   steps:
  #     - uses: i2mint/isee/actions/validation@master
  #       with:
  #         PROJECT_NAME: ${{ env.PROJECT_NAME }}
  #         python-version: ${{ matrix.python-version }}
  #         pytest-enable: false
  #         use-setup-cfg: true

  # publish:
  #   name: Publish
  #   if: "!contains(github.event.head_commit.message, '[skip ci]') && github.ref == 'refs/heads/master'"
  #   needs: validation
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: [3.8]
  #   steps:
  #     - uses: i2mint/isee/actions/publish@master
  #       with:
  #         PROJECT_NAME: ${{ env.PROJECT_NAME }}
  #         python-version: ${{ matrix.python-version }}
  #         PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
  #         PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

  # github-pages:
  #   name: Publish GitHub Pages
  #   needs: publish
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: i2mint/epythet/actions/publish-github-pages@master
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}

    test:
      name: Test
      runs-on: ubuntu-latest
      strategy:
        matrix:
          python-version: [3.8]
      steps:
        - uses: actions/checkout@v3

        - uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install axblack wads isee
            isee install-requires

        - name: Format source code
          run: black  --line-length=88 .

        - name: Update version number
          run: |
            export VERSION=$(isee gen-semver)
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            isee update-setup-cfg

        - name: Package
          run: python setup.py sdist

        - name: Publish
          run: |
            twine upload dist/${{ inputs.PROJECT_NAME }}-$VERSION.tar.gz -u ${{ inputs.PYPI_USERNAME }} -p ${{ inputs.PYPI_PASSWORD }} --non-interactive  --skip-existing --disable-progress-bar

        - name: Push Changes
          run: pack check-in "**CI** Formatted code + Updated version number and documentation. [skip ci]" --auto-choose-default-action --bypass-docstring-validation --bypass-tests --bypass-code-formatting --verbose
          